# -*- coding: utf-8 -*-
"""Task4_TimeSeriesLineChart.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1M6rGWqGPMq0q9SokOnr_tcwxmaunVC77
"""

# Plot a time series line chart to show the trend of total installs over time, segmented by app category.
# Highlight periods of significant growth by shading the areas under the curve where the increase in installs exceeds 20% month-over-month and content rating should be teen and app name should start with letter ‘E’ and installs should be more than 10k.
# this graph should work only between 6 PM IST to 9 PM IST apart from that time we should not show this graph in dashboard itself.

import pandas as pd
import plotly.graph_objects as go
from datetime import datetime
import pytz

data = pd.read_csv('C:/Users/sowmi/OneDrive/Documents/AI/Nullclass/Play Store Data.csv', encoding='utf-8', on_bad_lines='skip')

data['Installs'] = data['Installs'].astype(str).str.replace(r'[^\d]', '', regex=True)
data['Installs'] = data['Installs'].replace('', '0')
data['Installs'] = data['Installs'].astype(int)

filtered_data = data[
    (data['Content Rating'] == 'Teen') &
    (data['App'].str.startswith('E')) &
    (data['Installs'] > 10_000)
]

filtered_data['Last Updated'] = pd.to_datetime(filtered_data['Last Updated'], errors='coerce')


filtered_data['Year-Month'] = filtered_data['Last Updated'].dt.to_period('M')


time_series_data = filtered_data.groupby(['Year-Month', 'Category'])['Installs'].sum().reset_index()

time_series_data['Year-Month'] = time_series_data['Year-Month'].astype(str)
time_series_data['Year-Month'] = pd.to_datetime(time_series_data['Year-Month'])

time_series_data['MoM Change'] = time_series_data.groupby('Category')['Installs'].pct_change() * 100



def within_time_window():
    ist = pytz.timezone('Asia/Kolkata')
    current_time = datetime.now(ist)
    return 18 <= current_time.hour < 21


if within_time_window():
    fig = go.Figure()


    for category in time_series_data['Category'].unique():
        category_data = time_series_data[time_series_data['Category'] == category]

        # Add line trace
        fig.add_trace(go.Scatter(
            x=category_data['Year-Month'],
            y=category_data['Installs'],
            mode='lines',
            name=category
        ))


        significant_growth = category_data[category_data['MoM Change'] > 20]

        fig.add_trace(go.Scatter(
            x=significant_growth['Year-Month'],
            y=significant_growth['Installs'],
            fill='tozeroy',
            mode='none',
            name=f'Significant Growth - {category}',
            fillcolor='rgba(255, 165, 0, 0.4)'
        ))

    fig.update_layout(
        title="Trend of Total Installs Over Time (Filtered by Category)",
        xaxis_title="Time",
        yaxis_title="Total Installs",
        legend_title="App Category",
        template="plotly_dark"
    )

    fig.write_html('dashboard4.html')
    print("Graph generated and saved as 'dashboard4.html'.")
else:
    print("This graph is only available between 6 PM and 9 PM IST.")

